{% extends "layout.njk" %}
{% set title = "Pick a school, college or university" %}
{% set backLink = paths.back %}

{% block content %}
  <h1 class="govuk-heading-xl">
    {{ title }}
  </h1>
  <div class="govuk-grid-row">
    <div class="govuk-grid-column-two-thirds">
      <form action="{{ paths.next }}" method="post">


        <div class="govuk-form-group">
          <label for="my-autocomplete" class="govuk-label">
            <p>Find schools, colleges and universities using either:</p>
            <ul class="govuk-list govuk-list--bullet">
              <li>name</li>
              <li>postcode</li>
              <li>unique reference number (URN)</li>
            </ul>
          </label>
          <div id="my-autocomplete-container"></div>
        </div>

        {{ govukDetails({
          summaryText: "Canâ€™t find your location?",
          html: '<a href="#">Enter your location name and address manually</a>'
        }) }}

        <input type="submit" class="govuk-button" value="Continue" />
      </form>
    </div>
  </div>
{% endblock %}

{% block pageScripts %}
<script src="/public/javascripts/schools.js"></script>
<script>
  var createSimpleEngine = function (values) {
    return function (query, syncResults) {
      var cleanQuery = cleanString(query);

      var matches = values
        .filter(function(r) {
          return cleanString(r).indexOf(cleanQuery) !== -1
        })
        .slice(0, 30)
      syncResults(matches)
    }
  }

  function cleanString(s) {
    return s.toLowerCase().replace(/[,\'\"\(\)\.]/g, '').replace(/\-/g, ' ');
  }

  accessibleAutocomplete({
    element: document.querySelector('#my-autocomplete-container'),
    id: 'my-autocomplete', // To match it to the existing <label>.
    source: createSimpleEngine(autocompleteOptions),
    name: '{{ code }}-location-picked',
    defaultValue: "{{ data[code + '-location-picked'] | safe }}",
    minLength: 2
  })
</script>
{% endblock %}

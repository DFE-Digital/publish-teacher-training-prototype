{% set subjectHtml %}
  {% if data[code + "-subject"] %}
    {{ data[code + "-subject"] }}
    {% if data[code + "-second-subject"] %}
      <br>{{ data[code + "-second-subject"] }}
    {% endif %}
  {% else %}
    Unknown
  {% endif %}
{% endset %}

{% set schoolLocationsHtml %}
  {% set schoolLocations = data[code + "-locations"] %}
  {% if data["placements-display"] == "list" and schoolLocations.length > 0 %}
    {% set canEditSchoolLocations = true %}
    <ul class="govuk-list">
      {% for location in schoolLocations %}
        {% set location = data.schools | find("name", location) %}
        <li>{{ location.name }}, {{ location['address-level1'] }}</li>
      {% endfor %}
    </ul>
  {% elif data["placements-display"] == "area" %}
    <p class="govuk-body">Bradford, Leeds and Wakefield</p>
  {% else %}
    <div class="govuk-inset-text app-inset-text app-inset-text--{{ "error" if showErrors else "important" }}">
      <p class="govuk-heading-s app-inset-text__title">Where will candidates be placed?</p>
      {% if not data["placements-display"] %}
        {# Placement display setting must be set before this question can be answered #}
        <p><a class="govuk-link govuk-link--no-visited-state" href="/locations/placements-display?referrer=/course/{{ value("provider-code") }}/{{ code }}/"/>Set up placement schools</a></p>
      {% else %}
        <p><a class="govuk-link govuk-link--no-visited-state" href="/edit/{{ code }}/placement-locations">Select the locations candidates may be placed</a></p>
      {% endif %}
    </div>
  {% endif %}
{% endset %}

{% set trainingLocationHtml %}
  {% set trainingLocations = data[code + "-training-locations"] %}
  {% if trainingLocations %}
    <ul class="govuk-list">
    {% for location in trainingLocations %}
      {% if location == "remote" %}
         <li>Remotely</li>
      {% elif location == "placed" %}
         <li>Candidateâ€™s placement school</li>
      {% else %}
        {% set location = data.schools | find("urn", location) %}
        <li>{{ location.name }}, {{ location['address-level1'] }}</li>
      {% endif %}
    {% endfor %}
    </ul>
  {% else %}
    <div class="govuk-inset-text app-inset-text app-inset-text--{{ "error" if showErrors else "important" }}">
      <p class="govuk-heading-s app-inset-text__title">Where will candidates do their centre-based training?</p>
      <p><a class="govuk-link govuk-link--no-visited-state" href="/edit/{{ code }}/training-locations">Select a training location</a></p>
    </div>
  {% endif %}
{% endset %}

{% set applicationsOpenText %}
  {% if data[code + "-applications-open"] == "On a specific date" %}
    On {{ data[code + "-applications-open-date-day"] }}-{{ data[code + "-applications-open-date-month"] }}-{{ data[code + "-applications-open-date-year"] }}
  {% elseif data[code + "-applications-open"] == "When I publish the course" %}
    When the course is published
  {% elseif data[code + "-applications-open"] %}
    {{ data[code + "-applications-open"] }}
  {% else %}
    Unknown
  {% endif %}
{% endset %}

{{ govukSummaryList({
  classes: "govuk-!-margin-bottom-8",
  rows: [{
    key: {
      text: "Level"
    },
    value: {
      text: data[code + "-phase"] or "Unknown"
    },
    actions: {
      items: [{
        href: "/edit/" + code + "/phase",
        text: "Change",
        visuallyHiddenText: "phase"
      } if isNotPublished]
    } if showChangeLinks
  },

  {
    key: {
      html: "<abbr title=\"Special educational needs and disability\">SEND</abbr>"
    },
    value: {
      text: "Yes" if data[code + "-sen"] else "No"
    },
    actions: {
      items: [{
        href: "/edit/" + code + "/phase",
        text: "Change",
        visuallyHiddenText: "SEND"
      } if isNotPublished]
    } if showChangeLinks
  },

  {
    key: {
      text: "Subject"
    },
    value: {
      html: subjectHtml
    },
    actions: {
      items: [{
        href: "/edit/" + code + "/subject",
        text: "Change",
        visuallyHiddenText: "subject"
      }]
    } if showChangeLinks
  },

  {
    key: {
      text: "Languages"
    },
    value: {
      html: data[code + "-languages"].join("<br>") if isArray(data[code + "-languages"]) else data[code + "-languages"]
    },
    actions: {
      items: [{
        href: "/edit/" + code + "/languages",
        text: "Change",
        visuallyHiddenText: "languages"
      }]
    } if showChangeLinks
  } if data[code + "-subject"] == "Modern languages",

  {
    key: {
      text: "Age range"
    },
    value: {
      text: data[code + "-age-youngest"] + " to " + data[code + "-age-oldest"] if data[code + "-age-range"] == "Another age range" else data[code + "-age-range"] or "Unknown"
    },
    actions: {
      items: [{
        href: "/edit/" + code + "/age-range",
        text: "Change",
        visuallyHiddenText: "age range"
      }]
    } if showChangeLinks
  },

  {
    key: {
      text: "Outcome"
    },
    value: {
      text: data[code + "-outcome"] or "Unknown"
    },
    actions: {
      items: [{
        href: "/edit/" + code + "/outcome",
        text: "Change",
        visuallyHiddenText: "outcome"
      }]
    } if showChangeLinks
  },

  {
    key: {
      text: "Fee or salary"
    },
    value: {
      text: data[code + "-type"] or "Unknown"
    },
    actions: {
      items: [{
        href: "/edit/" + code + "/funding",
        text: "Change",
        visuallyHiddenText: "fee or salary"
      } if isNotPublished]
    } if showChangeLinks
  } if data["new-course"]["include-fee-or-salary"] else {
    key: {
      text: "Apprenticeship"
    },
    value: {
      text: data[code + "-apprenticeship"] or "Unknown"
    },
    actions: {
      items: [{
        href: "/edit/" + code + "/apprenticeship",
        text: "Change",
        visuallyHiddenText: "apprenticeship"
      } if isNotPublished]
    } if showChangeLinks
  },

  {
    key: {
      text: "Full or part time"
    },
    value: {
      text: data[code + "-full-part"] or "Unknown"
    },
    actions: {
      items: [{
        href: "/edit/" + code + "/full-time-part-time",
        text: "Change",
        visuallyHiddenText: "full time or part time"
      }]
    } if showChangeLinks
  },

  {
    key: {
      text: "Accredited body"
    },
    value: {
      text: data[code + "-new-accredited-body"] or data[code + "-accredited-body"] or "Unknown"
    },
    actions: {
      items: [{
        href: "/edit/" + code + "/accredited-body",
        text: "Change",
        visuallyHiddenText: "accredited body"
      } if isNotPublished]
    } if showChangeLinks
  } if data["new-course"]["include-accredited"],

  {
    classes: schoolLocationSummaryRowClasses,
    key: {
      text: "Placement schools"
    },
    value: {
      html: schoolLocationsHtml
    },
    actions: {
      items: [{
        href: "/edit/" + code + "/placement-locations",
        text: "Change",
        visuallyHiddenText: "placement schools"
      }]
    } if showChangeLinks and canEditSchoolLocations
  },

  {
    key: {
      text: "Centre-based training locations"
    },
    value: {
      html: trainingLocationHtml
    },
    actions: {
      items: [{
        href: "/edit/" + code + "/training-locations",
        text: "Change",
        visuallyHiddenText: "training location"
      }]
    } if showChangeLinks and value(code + "-training-locations")
  },

  {
    key: {
      text: "Applications open"
    },
    value: {
      text: applicationsOpenText
    },
    actions: {
      items: [{
        href: "/edit/" + code + "/applications-open",
        text: "Change",
        visuallyHiddenText: "applications open date"
      } if isNotPublished]
    } if showChangeLinks
  },

  {
    key: {
      text: "Course starts"
    },
    value: {
      text: data[code + "-start-date"] or "Unknown"
    },
    actions: {
      items: [{
        href: "/edit/" + code + "/start-date",
        text: "Change",
        visuallyHiddenText: "start date"
      } if isNotPublished]
    } if showChangeLinks
  }]
}) }}
